const service = {
  serviceName: 'serverless-tests',
  functions: {
    helloWorld: {
      handler: 'handler.helloWorld',
      events: [
        {
          http: {
            method: 'post',
            path: '/helloWorld',
            cors: true
          }
        }
      ],
      name: 'serverless-tests-staging-helloWorld'
    },
    helloWorld2: {
      handler: 'handler.helloWorld2',
      events: [
        {
          sqs: {
            batchSize: 10,
            arn: {
              'Fn::GetAtt': [
                'SQSTest',
                'Arn'
              ]
            }
          }
        }
      ],
      name: 'serverless-tests-staging-helloWorld2'
    }
  },
  resources: {
    Resources: {
      TableTest: {
        Type: 'AWS::DynamoDB::Table',
        Properties: {
          TableName: 'DYNAMOtableTest-staging'
        }
      },
      SQSTest: {
        Type: 'AWS::SQS::Queue',
        Properties: {
          QueueName: 'SQSTest-staging'
        }
      },
      SQSTest2: {
        Type: 'AWS::SQS::Queue',
        Properties: {
          QueueName: 'SQS-Test2-staging'
        }
      }
    }
  },
  stage: 'staging'
}

const generatedResources =
`Lambda(serverlessTestsHelloWorld, "serverless-tests_helloWorld", "Lambda function")
  Lambda(serverlessTestsHelloWorld2, "serverless-tests_helloWorld2", "Lambda function")
  DynamoDB(DYNAMOtableTestStaging, "DYNAMOtableTest-staging", "DynamoDB")
  SimpleQueueService(SQSTestStaging, "SQSTest-staging", "SQS")
  SimpleQueueService(SQSTest2Staging, "SQS-Test2-staging", "SQS")
  APIGateway(stagingServerlessTests, "serverless-tests", "API Gateway")
  Rel(stagingServerlessTests, serverlessTestsHelloWorld, "POST /helloWorld", "HTTP")
  Rel(sQSTestStaging, serverlessTestsHelloWorld2, "Subscriber", "SQS")`

const mockOptions = {
  path: 'docs',
  name: 'sls-test',
  s3Path: '',
  s3Bucket: ''
}

const mockDiagram = `'AUTOGENERATED - DO NOT REMOVE NOR EDIT THIS SECTION'
@startuml sls-test

!include <C4/C4_Container>
!include <C4/C4_Context>
!include <tupadr3/common>
!include <awslib/AWSCommon>
!include <tupadr3/font-awesome/users>
!include <tupadr3/devicons/react>
!include <awslib/Compute/Lambda>
!include <awslib/ApplicationIntegration/SimpleQueueService>
!include <awslib/ApplicationIntegration/SimpleNotificationService>
!include <awslib/ApplicationIntegration/APIGateway>
!include <awslib/Database/DynamoDB>

Lambda(serverlessTestsHelloWorld, "serverless-tests_helloWorld", "Lambda function")
  Lambda(serverlessTestsHelloWorld2, "serverless-tests_helloWorld2", "Lambda function")
  DynamoDB(DYNAMOtableTestStaging, "DYNAMOtableTest-staging", "DynamoDB")
  SimpleQueueService(SQSTestStaging, "SQSTest-staging", "SQS")
  SimpleQueueService(SQSTest2Staging, "SQS-Test2-staging", "SQS")
  APIGateway(stagingServerlessTests, "serverless-tests", "API Gateway")
  Rel(stagingServerlessTests, serverlessTestsHelloWorld, "POST /helloWorld", "HTTP")
  Rel(sQSTestStaging, serverlessTestsHelloWorld2, "Subscriber", "SQS")
'END OF AUTOGENERATED SECTION'

'AUTOGENERATED - DO NOT REMOVE NOR EDIT THIS SECTION'

@enduml

'END OF AUTOGENERATED SECTION'`

export {
  service,
  generatedResources,
  mockOptions,
  mockDiagram
}